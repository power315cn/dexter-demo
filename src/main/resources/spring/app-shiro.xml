<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
  
    <!-- 缓存管理器 使用Ehcache实现-->  
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
        <property name="cacheManagerConfigFile" value="classpath:ehcache/shiro-ehcache.xml"/>  
    </bean>  
  
  	<!-- 密码MD5 -->
    <bean id="passwordHelper" class="com.luokuang.open.stat.shiro.PasswordHelper">  
    </bean>  
  
    <!-- 凭证匹配器 -->  
    <bean id="credentialsMatcher"  
          class="com.luokuang.open.stat.shiro.credentials.RetryLimitMD5CredentialsMatcher">  
        <constructor-arg ref="cacheManager"/>  
        <property name="passwordHelper" ref="passwordHelper"/>  
    </bean>  
  
  	<bean id="sysUserService" class="com.luokuang.open.stat.web.sys.service.SysUserService">
  	</bean>
  
  
    <!-- Realm实现 -->  
    <bean id="sysUserRealm" class="com.luokuang.open.stat.shiro.realm.SysUserRealm">  
    	<property name="sysUserService" ref="sysUserService" />
        <property name="credentialsMatcher" ref="credentialsMatcher"/>  
        <!--密码校验接口
        <property name="cachingEnabled" value="true"/>  
        <property name="authenticationCachingEnabled" value="true"/>  
        <property name="authenticationCacheName" value="authenticationCache"/>  
        <property name="authorizationCachingEnabled" value="true"/>  
        <property name="authorizationCacheName" value="authorizationCache"/>
        -->    
    </bean>  
  

    <!-- 安全管理器 -->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="sysUserRealm"/>  
   
    </bean>  
  
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->  
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>  
        <property name="arguments" ref="securityManager"/>  
    </bean>  
  
    <!--下面的loginUrl有两个必要条件,一个登陆校验失败以后会强制客户端redirect到这个url，  
    另外一个是登陆的表单(含有用户名及密码)必须action到这个url-->  
    <!-- 自定义的能够接收校验码的身份验证过滤器  
     跳转问题太他妈诡异了,不用了，自己写代码控制如何跳转了  
    <bean id="formAuthenticationFilter" class="com.shinowit.framework.security.filter.ValidFormAuthenticationFilter">  
        <property name="usernameParam" value="loginName"/>  
        <property name="passwordParam" value="loginPass"/>  
        <property name="loginUrl" value="/login/"/>  
    </bean>  
-->  
  
    <!-- Shiro的Web过滤器 -->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <property name="securityManager" ref="securityManager"/>  
        <property name="loginUrl" value="/login.do"/>  
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>  
        <property name="filters">  
            <map>  
                <entry key="authc">  
                    <bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"/>  
                </entry>  
            </map>  
            <!--  
            <util:map>  
                <entry key="authc" value-ref="formAuthenticationFilter"/>  
            </util:map>  
            -->  
        </property>  
        <property name="filterChainDefinitions">  
            <value>  
                /index.jsp = anon  
                /login** = anon 
                /checklogin** = anon 
                /captcha** = anon
                /bootstrap/** = anon  
                /dist/** = anon  
                /plugins/** = anon
                /task/** = anon
                /404** = anon
                /500** = anon
                /send/** = anon 
                /** = authc  
            </value>  
        </property>  
    </bean>  
  
    <!-- Shiro生命周期处理器-->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
  
  
</beans>  